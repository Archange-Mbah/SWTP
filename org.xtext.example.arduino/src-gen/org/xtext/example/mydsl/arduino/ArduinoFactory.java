/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.arduino;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.arduino.ArduinoPackage
 * @generated
 */
public interface ArduinoFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ArduinoFactory eINSTANCE = org.xtext.example.mydsl.arduino.impl.ArduinoFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>components</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>components</em>'.
   * @generated
   */
  components createcomponents();

  /**
   * Returns a new object of class '<em>component state</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>component state</em>'.
   * @generated
   */
  component_state createcomponent_state();

  /**
   * Returns a new object of class '<em>connection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>connection</em>'.
   * @generated
   */
  connection createconnection();

  /**
   * Returns a new object of class '<em>component</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>component</em>'.
   * @generated
   */
  component createcomponent();

  /**
   * Returns a new object of class '<em>wiring</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>wiring</em>'.
   * @generated
   */
  wiring createwiring();

  /**
   * Returns a new object of class '<em>behavior</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>behavior</em>'.
   * @generated
   */
  behavior createbehavior();

  /**
   * Returns a new object of class '<em>transition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>transition</em>'.
   * @generated
   */
  transition createtransition();

  /**
   * Returns a new object of class '<em>transition effect</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>transition effect</em>'.
   * @generated
   */
  transition_effect createtransition_effect();

  /**
   * Returns a new object of class '<em>state</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>state</em>'.
   * @generated
   */
  state createstate();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ArduinoPackage getArduinoPackage();

} //ArduinoFactory
